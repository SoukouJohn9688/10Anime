#spring.datasource.url=${POSTGRES_DB}
#spring.datasource.username=${POSTGRES_USER}
#spring.datasource.password=${POSTGRES_PASSWORD}


#spring.datasource.url=jdbc:postgresql://postgres:5432/10AnimeDB

spring.datasource.url=jdbc:postgresql://localhost:5432/10AnimeDB
spring.datasource.username=postgres
spring.datasource.password=12345
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true


spring.application.name=10Anime

#spring.security.user.name=${ADMIN_USER}
#spring.security.user.password=${ADMIN_PASS}
#spring.security.user.roles=ADMIN






## Google Login
spring.security.oauth2.client.registration.google.client-id=${GGL_CLID}
spring.security.oauth2.client.registration.google.client-secret=${GGL_SCRT}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email





#Initialize Docker Compose
spring.docker.compose.enabled=true
spring.docker.compose.lifecycle-management=start_only



application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
application.security.jwt.expiration=864000000
application.security.jwt.refresh-token.expiration=6048000000

# CORS
#web.cors.allowed-origins=http://localhost:8080,http://localhost:8081,http://localhost:5173,http://localhost:4200,//localhost:3000

logging.level.org.springframework=DEBUG